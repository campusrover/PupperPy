sudo apt install git vim screen python3-pip
mkdir pupper_code
cd pupper_code

# python2 is officially being dropped so only using python3 for this
sudo pip3 install --upgrade pip
sudo pip3 install ipython

# this replaces the RPI-Setup install_packages.sh
git clone http://github.com/stanfordroboticsclub/UDPComms.git
sudo pip3 install msgpack pexpect
sudo ln -s ./UDPComms/rover.py /usr/local/bin/rover
sudo pip install -e UDPComms

git clone https://github.com/stanfordroboticsclub/uDHCPd.git
sudo bash uDHCPd/install.sh

# So that you don't get problems with not having python2, alias pip and python to pip3 and python3
# in ~/.bashrc add line with . ~/.bash_aliases
# create .bash_aliases in home folder
# add line: export PYTHONPATH="${PYTHONPATH}:/home/cerbaris/.local/bin"
# add line: alias pip='pip3'
# add line: alias python='python3'
# either restart you terminal or source the new .bashrc
. ~/.bashrc

# Now install the pupper code
git clone https://github.com/stanfordroboticsclub/StanfordQuadruped.git
cd StanfordQuadruped
sudo bash install.sh
# go to PupperCommand/joystick.service and StanfordQuadruped/robot.service and change the paths to match your configuration

# If you want everything to work you will have to setup your pi with username pi and install everything in your home folder /home/pi
# I had to change the paths in PupperCommand/joystick.service and StanfordQuadruped/robot.service and then fix the symlinks

# StanfordQuadrupped install some weird version of pigpio, this version does not work 
# I had to get pigpio from source and build it
cd ~/pupper_code/pigpio-74
sudo make unistall
cd ..
wget https://github.com/joan2937/pigpio/archive/master.zip
unzip master.zip
cd pigpio-master
make
sudo make install
sudo pigpio
sudo systemctl start robot
# now it should all be working

################################################################################
################    Bluetooth Computer Interface Setup    ######################
################################################################################

# Installing stuff
sudo apt-get install libbluetooth-dev
sudo pip install pybluez
# techincally the root install is enough, but this lets you use it in ipython too
pip install pybluez

# Now enable bluetooth, this needs to be done everytime the interface is
# used, still looking for an autoconnect
bluetoothctl
# Coppy the shown MAC address, put this into the file pupperpy/BluetoothInterface.py
enable on
pairable on
discoverable on
# Now find and pair cerbaris from your computer, and here a prompt will pop up to accept it
# then exit bluetoothctl
exit

# Now setup the services
ln -s /home/cerbaris/pupper_code/pupperpy/pupperpy/resources/pupperble.service /lib/systemd/system/
ln -s /home/cerbaris/pupper_code/pupperpy/pupperpy/resources/bin/robotble.service /etc/systemd/system/
# Disable other services (alternatively you could just 'stop' them, I think
# after disabling you have to relink them)
# TODO: put aliases in bash_aliases to switch between the control modes
sudo systemctl disable joystick
sudo systemctl disable robot
# Reload the daemon and start the new services
sudo systemctl enable pupperble
sudo systemctl enable robotble
sudo systemctl start pupperble
sudo systemctl start robotble
# Now on your computer you can start the KeyboardInterface

# Install libedgetpu and TensorFlow Lite with Python (tflite_runtime library)
# See instructions at coral.ai/docs/accelerator/get-started
# 1. add debian package repository to this system
echo "deb https://packages.cloud.google.com/apt coral-edgetpu-stable main" | sudo tee /etc/apt/sources.list.d/coral-edgetpu.list
curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
sudo apt-get update
# 2. Install the Edge TPU runtime
sudo apt-get install libedgetpu1-std
# 3. Now connect the Coral TPU accelerator to the pi via one of the USB3 ports
# 4. Install the TensorFlow Lite library (see instructions at tensorflow.org/lite/guide/python)
# Note that the below command is for installing TensorFlow lite on a linux ARM 32 OS with Python 3.7
sudo pip3 install https://dl.google.com/coral/python/tflite_runtime-2.1.0.post1-cp37-cp37m-linux_armv7l.whl
# Note: To run the example classification code from the coral.ai webpage above, you must additionally install libopenjp2-7-dev and libtiff5 for Pillow to work
# sudo apt-get install libopenjp2-7 libtiff5
